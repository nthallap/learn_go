docker --version


docker run hello-world  --> to run a container
docker run -d hello-world --> run in detach mode

docker run <image_name>  <override_default_command>  --> to override defatult command

docker run -p<laptop_port>:<container_port> -d <image>  --> to bind the with laptop_port
docker run -p6000:5247 -d redit	

docker run --name <give_name_to_container> <image_name>  --> to give a name to a container

docker ps -a  --> to get the list of containers

docker pull hello-world  --> to pull a image
ex : docker image pull ubuntu:latest

docker image ls  --> to get the list of images
docker images

docker rmi <image_id> --> to remove image

docker rm <container_id>  --> to remove containter 

docker create <image>  --> to create a docker 
[returns a id]

docker start -a <retrund_id_by> --> to start that container

docker stop <container_id> --> to stop the docker
docker start <container_id> --> to start exited container

docker logs <container_id/container_name> --> to get the logs in that docker

docker exec -it <container_id/container_name> /bin/bash  ----> to execute some commands in running container

docker inspect <container_id> --> to get the network or ip detais of that container

docker network ls  --> to know the list of docker networks

docker network create <newwork_name>  --> to create a docker network

 -e is used to set environment variable
 --net to specify the network
 -p to bind the host port with docker port
 -v <host_path>:<container_path>  to create volues
 --name to specify the name of the container
 
 
 docker build -t <app_name>:<tag> <path_of_dir>

docker system prune --> to remove all container 
connect mongodb and mongo exprss container in same network
docker-compose   is a command to execute docker compose file(yaml).
It is used to up and down container

docker-compose -f <yaml_file> <up/down>

docker login -u <user_name> -p <password>  --> to login docker
docker tag  locacl_image:tag  <docker_user_name>/<container_name>:<tag>  --> to create a tag for the local image
docker push <docker_user_name>/<container_name>:<tag>        --> to push docker image to docker hub repository

-----------------------
docker run -d -p27017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin  -e MONGO_INITDB_ROOT_PASSWORD=password --name=mongodb --net mongo_network mongo
docker run -d -p8081:8081 -e ME_CONFIG_MONGODB_ADMINUSERNAME=admin -e ME_CONFIG_MONGODB_ADMINPASSWORD=password --name mondb_express -e ME_CONFIG_MONGODB_SERVER=mongodb --net mongo_network mongo-express




=========

to install docker using scripts
---------
 curl -fsSL https://get.docker.com -o get-docker.sh
 sudo sh get-docker.sh
 
 tmux